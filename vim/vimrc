set rtp=$CBASH_DIR/vim,/usr/share/vim,/usr/share/vim/*
set nocompatible              " be iMproved, required
filetype on                   " required for compatibility with Mac OS X, See issue Vundle#167
filetype off                  " required

set term=xterm-256color       " make vim and tmux speak same codez

let mapleader = ","           " set vim leader key

" set the runtime path to include Vundle and initialize
set rtp+=$CBASH_DIR/vim/bundle/Vundle.vim
" alternatively, pass a path where Vundle should install plugins
call vundle#begin("$CBASH_DIR/vim/plugins")

" let Vundle manage Vundle, required
Plugin 'VundleVim/Vundle.vim'

" Other plugins
Plugin 'tpope/vim-surround'
Plugin 'tpope/vim-repeat'
Plugin 'tomtom/tcomment_vim'
Plugin 'tpope/vim-fugitive'
Plugin 'scrooloose/nerdtree'
Plugin 'kien/ctrlp.vim'
Plugin 'Nopik/vim-nerdtree-direnter'
" Plugin 'octol/vim-cpp-enhanced-highlight'
" Plugin 'vim-scripts/a.vim'
" Plugin 'pangloss/vim-javascript'
" Plugin 'leafgarland/typescript-vim'
" Plugin 'mxw/vim-jsx'
" Plugin 'dylon/vim-antlr'

call vundle#end()     " required
filetype indent on    " required

let g:netrw_home=$CBASH_DIR.'/vim'

set viminfo+=n$CBASH_DIR/vim/viminfo

syntax on

set ruler
set autowrite
set nobackup
set nowritebackup
set noswapfile
set number
set cursorline
set showcmd
set wildmenu
set mouse=a
set hlsearch
set incsearch
set relativenumber

" panes
set splitbelow
set splitright
set fillchars=vert:â”‚ " Vertical sep between windows (unicode)

" indentiation config
set tabstop=2 softtabstop=2 shiftwidth=2 smarttab noshiftround expandtab

" colors & theme
colo nachtleben
set termguicolors

" somewhat better trackpad scrolling
map <ScrollWheelUp> <C-Y>
map <ScrollWheelDown> <C-E>

" show context around current cursor position
set scrolloff=8
set sidescrolloff=16

" format json
com! FormatJson %!python -m json.tool

" copy text to system clipboard
vnoremap <C-c> :w !pbcopy<CR><CR>

" NERDTree settings
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTree") && b:NERDTree.isTabTree()) | q | endif
nnoremap <Leader>f :NERDTreeToggle<Enter>

" let NERDTreeQuitOnOpen = 1
let NERDTreeMinimalUI = 1
let NERDTreeDirArrows = 1
let NERDTreeMapOpenInTab = '<ENTER>'
let g:netrw_banner = 0
let g:netrw_liststyle = 3
let g:netrw_browse_split = 4
let g:netrw_altv = 1
let g:netrw_winsize = 25

" CtrlP settings
let g:ctrlp_split_window = 1
